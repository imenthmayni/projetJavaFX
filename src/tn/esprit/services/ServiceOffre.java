/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package tn.esprit.services;

import java.sql.Connection;
import java.sql.Date;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;
import tn.esprit.entities.Offre;
import tn.esprit.entities.Status;
import tn.esprit.entities.TypeOffre;
import tn.esprit.entities.User;

/**
 *
 * @author imen
 */
public class ServiceOffre implements IserviceOffre {
    private static ServiceOffre instance;
    PreparedStatement preparedStatement;
    Connection connection;
    
    public ServiceOffre() {
        connection = tn.esprit.tools.DataSource.getInstance().getConnection();    

}
    
    public static ServiceOffre getInstance() {
        if (instance == null) {
            instance = new ServiceOffre();
        }
        return instance;
    }

    @Override
    public void ajouter(Offre of ,User us) throws SQLException {
    
     User user=new User();
    String req = "INSERT INTO offre ( dateDebut,dateFin,nomOffre, description, typeOffre,valeurOffre,imageOffre,status,iduser) VALUES (?, ?, ?, ?,?,?,?,?,?)";
    PreparedStatement ps = connection.prepareStatement(req, Statement.RETURN_GENERATED_KEYS); // Indiquez RETURN_GENERATED_KEYS
    
    // Définissez l'ID manuellement
    
    ps.setDate(1, new java.sql.Date(of.getDateDebut().getTime()));
    ps.setDate(2, new java.sql.Date(of.getDateFin().getTime()));
    ps.setString(3, of.getNomOffre());
    ps.setString(4, of.getDescription());
    ps.setString(5, of.getTypeOffre().toString());
    ps.setInt(6, of.getValeurOffre());
    ps.setString(7, of.getImageOffre());
    ps.setString(8, of.getStatus().toString());
    ps.setInt(9,us.getIduser());
    
    ps.executeUpdate();
    
    // Récupérez l'ID auto-incrémenté (s'il est généré par la base de données)
       ResultSet generatedKeys = ps.getGeneratedKeys();
       if (generatedKeys.next()) {
        int autoGeneratedID = generatedKeys.getInt(1);
        // Vous pouvez utiliser autoGeneratedID comme nouvel ID auto-incrémenté
        of.setIdOffre(autoGeneratedID);
    }
}









    @Override
    public void modifier(int id, Offre offreModifie) throws SQLException {
       if (existeOffre(id)) {
    } else {
        System.err.println("L'ID spécifié n'existe pas dans la base de données.");
        return; // Sortez de la méthode si l'ID n'existe pas
        }
    
    // Si l'ID existe, effectuez la mise à jour
   String req = "UPDATE offre SET nomOffre=?, description=?, dateDebut=?, dateFin=?, typeOffre=?, valeurOffre=?, imageOffre=?, status=? WHERE idOffre=?";
    PreparedStatement ps = connection.prepareStatement(req);

    // Spécifiez les valeurs pour les paramètres de la requête préparée
    ps.setString(1, offreModifie.getNomOffre());
    ps.setString(2, offreModifie.getDescription());
    ps.setDate(3, new java.sql.Date(offreModifie.getDateDebut().getTime()));
    ps.setDate(4, new java.sql.Date(offreModifie.getDateFin().getTime()));
    ps.setString(5, offreModifie.getTypeOffre().toString());
    ps.setInt(6, offreModifie.getValeurOffre());
    ps.setString(7, offreModifie.getImageOffre());
    ps.setString(8, offreModifie.getStatus().toString());
    ps.setInt(9, id);
    ps.executeUpdate();
}   
    @Override
    public boolean existeOffre(int id) throws SQLException {
         String req = "SELECT idOffre FROM offre WHERE idOffre=?";
    PreparedStatement ps = connection.prepareStatement(req);
    ps.setInt(1, id);
    
    ResultSet rs = ps.executeQuery();
    
    return rs.next();
    }

    @Override
    public void supprimer(int id) throws SQLException {
       if (!existeOffre(id)) {
        System.err.println("L'ID spécifié n'existe pas dans la base de données.");
        return; // Sortez de la méthode si l'ID n'existe pas
    }
    
    // Si l'ID existe, effectuez la suppression
    String req = "DELETE FROM offre WHERE idOffre=?";
    PreparedStatement ps = connection.prepareStatement(req);
    ps.setInt(1, id); 
    
    ps.executeUpdate();
    
    }


    
    
    
    
    
    @Override
public List<Offre> recuperer() throws SQLException {
    List<Offre> listeOffres = new ArrayList<>();

    // Écrivez la requête SQL pour récupérer les offres
    String req = "SELECT idOffre, nomOffre, description, dateDebut, dateFin, typeOffre, valeurOffre, imageOffre, status, iduser FROM offre";

    PreparedStatement ps = connection.prepareStatement(req);
    ResultSet rs = ps.executeQuery();

    while (rs.next()) {
        // Créez un nouvel objet Offre pour chaque enregistrement dans la base de données
        Offre offre = new Offre();
        offre.setIdOffre(rs.getInt("idOffre"));
        offre.setNomOffre(rs.getString("nomOffre"));
        offre.setDescription(rs.getString("description"));
        offre.setDateDebut(rs.getDate("dateDebut"));
        offre.setDateFin(rs.getDate("dateFin"));
        offre.setTypeOffre(TypeOffre.valueOf(rs.getString("typeOffre"))); // Vous devez avoir une méthode pour convertir une chaîne en enum TypeOffre
        offre.setValeurOffre(rs.getInt("valeurOffre"));
        offre.setImageOffre(rs.getString("imageOffre"));
        offre.setStatus(Status.valueOf(rs.getString("status"))); // Vous devez avoir une méthode pour convertir une chaîne en enum Status

        // Créez un objet User si nécessaire et définissez-le dans l'offre
        User user = new User();
        user.setIduser(rs.getInt("iduser")); // Remplacez le type de données approprié et la méthode d'obtention de l'ID de l'utilisateur
        offre.setUser(user);

        // Ajoutez l'offre à la liste
        listeOffres.add(offre);
    }

    return listeOffres;
}

    
    
    
    
}
